name: Docs CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write
  actions: write

env:
  NPM_VERSION: '22'
  DOCKER_REGISTRY: 'ghcr.io'
  REPO_NAME: ${{ github.event.repository.name }}
  DOCKER_IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest
  NEXT_PUBLIC_UI_URL: https://docs.homelab-prod.synology.me

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Clone main docs repository
        run: git clone https://github.com/munirmardinli-dev/docs.git docs-app

      - name: Extract version from package.json
        id: get-version
        run: |
          VERSION=$(node -p "require('./docs-app/package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
          cache-dependency-path: docs-app/package-lock.json
      
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: docs-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('docs-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
        working-directory: docs-app
        
      - name: Delete .env.local
        working-directory: docs-app
        run: rm .env.local

      - name: Production environment variables
        working-directory: docs-app
        run: |
          echo "NEXT_PUBLIC_UI_URL=$NEXT_PUBLIC_UI_URL" >> .env.production
          echo "NEXT_PUBLIC_HEADER_TITEL=$NEXT_PUBLIC_HEADER_TITEL" >> .env.production
          cat .env.production

      - name: Copy MDX files from docs folder to Next.js app
        run: cp -r docs/* docs-app/src/app/ || true

      - name: Run build
        run: npm run build
        working-directory: docs-app
        env:
          NODE_ENV: production
          NEXT_PUBLIC_UI_URL: ${{ env.NEXT_PUBLIC_UI_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docs-app/.github/docker/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
          build-args: |
            VERSION=${{ env.VERSION }}
