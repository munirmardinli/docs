name: Docs CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write
  actions: write

env:
  NPM_VERSION: '22'
  REGISTRY_URL: 'https://npm.pkg.github.com'
  REPO_NAME: ${{ github.event.repository.name }}
  NEXT_PUBLIC_UI_URL: http://localhost:3000
  NEXT_PUBLIC_HEADER_TITEL: Docs Management
  NEXT_PUBLIC_GIT_REPO_URL: https://github.com/munirmardinli/docs

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: List initial directory contents
        run: ls -la
      - name: Clone main docs repository
        run: |
          git clone https://github.com/munirmardinli-dev/docs.git .
          ls -la

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
          
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Production environment variables
        run: |
          echo "NODE_ENV=production" > .env.production
          echo "NEXT_PUBLIC_UI_URL=$NEXT_PUBLIC_UI_URL" >> .env.production
          echo "NEXT_PUBLIC_HEADER_TITEL=$NEXT_PUBLIC_HEADER_TITEL" >> .env.production
          echo "NEXT_PUBLIC_GIT_REPO_URL=$NEXT_PUBLIC_GIT_REPO_URL" >> .env.production
          cat .env.production
          
      - name: Run build
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_UI_URL: ${{ env.NEXT_PUBLIC_UI_URL }}
          NEXT_PUBLIC_HEADER_TITEL: ${{ env.NEXT_PUBLIC_HEADER_TITEL }}
          NEXT_PUBLIC_GIT_REPO_URL: ${{ env.NEXT_PUBLIC_GIT_REPO_URL }}
