name: Docs CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write
  actions: write

env:
  NPM_VERSION: '22'
  REGISTRY_URL: 'https://npm.pkg.github.com'
  REPO_NAME: ${{ github.event.repository.name }}
  NEXT_PUBLIC_UI_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
  NEXT_PUBLIC_HEADER_TITEL: Docs Management
  NEXT_PUBLIC_GIT_REPO_URL: https://github.com/munirmardinli/docs
  DEPLOY_BRANCH: gh-pages

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0      
      - name: Clone main docs repository
        run: git clone https://github.com/munirmardinli-dev/docs.git docs-app
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
          cache-dependency-path: docs-app/package-lock.json
      
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: docs-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('docs-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
        working-directory: docs-app
        
      - name: Production environment variables
        run: |
          echo "NODE_ENV=production" > .env.production
          echo "NEXT_PUBLIC_UI_URL=$NEXT_PUBLIC_UI_URL" >> .env.production
          echo "NEXT_PUBLIC_HEADER_TITEL=$NEXT_PUBLIC_HEADER_TITEL" >> .env.production
          echo "NEXT_PUBLIC_GIT_REPO_URL=$NEXT_PUBLIC_GIT_REPO_URL" >> .env.proproduction
          cat .env.production
        working-directory: docs-app
        env:
          NEXT_PUBLIC_UI_URL: ${{ env.NEXT_PUBLIC_UI_URL }}
          NEXT_PUBLIC_HEADER_TITEL: ${{ env.NEXT_PUBLIC_HEADER_TITEL }}
          NEXT_PUBLIC_GIT_REPO_URL: ${{ env.NEXT_PUBLIC_GIT_REPO_URL }}

      - name: Copy MDX files from docs folder to Next.js app
        run: cp -r docs/* docs-app/src/app/ || true

      - name: Run build
        run: npm run build
        working-directory: docs-app
        env:
          NODE_ENV: production
          NEXT_PUBLIC_UI_URL: ${{ env.NEXT_PUBLIC_UI_URL }}
          NEXT_PUBLIC_HEADER_TITEL: ${{ env.NEXT_PUBLIC_HEADER_TITEL }}
          NEXT_PUBLIC_GIT_REPO_URL: ${{ env.NEXT_PUBLIC_GIT_REPO_URL }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs-app/out

  deploy:
    needs: prepare
    if: github.ref == 'refs/heads/main'
    
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: pages-artifact
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-gh-pages:
    needs: prepare
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v5
        with:
          ref: ${{ env.DEPLOY_BRANCH }}
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: pages-artifact
          path: ./temp-build

      - name: Clear existing files (except .git)
        run: |
          # Behalte .git Verzeichnis bei, l√∂sche alles andere
          shopt -s dotglob
          find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} +
          shopt -u dotglob

      - name: Copy new build files
        run: cp -r temp-build/* ./

      - name: Clean up temp directory
        run: rm -rf temp-build

      - name: Commit and push to gh-pages
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Deploy to GitHub Pages from main @ ${{ github.sha }}"
          git push origin ${{ env.DEPLOY_BRANCH }}
